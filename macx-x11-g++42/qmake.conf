# macx-g++ (different from g++.conf)

#
# qmake configuration for macx-x11-g++42
#
# Mac OS X + command-line compiler
#

QT_HOST_USE_SUFFIX = $$(QT_HOST_USE_SUFFIX)
isEmpty( QT_HOST_USE_SUFFIX ):QT_HOST_USE_SUFFIX = 1
QT_MACOS_PATH   = $$(QT_MACOS_PATH)
isEmpty( QT_MACOS_PATH ):QT_MACOS_PATH = $(HOME)/Developpement/OS/OSX-Libraries/Qt/4.7.4
isEqual( $${QT_HOST_USE_SUFFIX}, 1 ):QT_HOST_BIN_SUFFIX  =   -qt4
else:QT_HOST_BIN_SUFFIX = 

QT_HOST_USE_SUFFIX = $$(QT_HOST_USE_SUFFIX)
isEmpty( QT_HOST_USE_SUFFIX ):QT_HOST_USE_SUFFIX = 1
QT_WIN32_PATH   = $$(QT_WINDOWS_PATH)
isEmpty( QT_WIN32_PATH ):QT_WIN32_PATH = $(HOME)/.wine/drive_c/Development/Qt/4.8.0
isEqual( $${QT_HOST_USE_SUFFIX}, 1 ):QT_HOST_BIN_SUFFIX  =   -qt4
else:QT_HOST_BIN_SUFFIX = 

TOOLCHAIN_MACOS_PATH = $$(TOOLCHAIN_MACOS_PATH)
isEmpty( TOOLCHAIN_MACOS_PATH ):TOOLCHAIN_MACOS_PATH = /opt/mac
TOOLCHAIN_MACOS_BIN  =   $${TOOLCHAIN_MACOS_PATH}/bin
TOOLCHAIN_MACOS_BIN_PREFIX    =   $${TOOLCHAIN_MACOS_BIN}/i686-apple-darwin10-
TOOLCHAIN_MACOS_INCLUDE = $${TOOLCHAIN_MACOS_PATH}/include

MACOS_SDK_PATH = $$(MACOS_SDK_PATH)
isEmpty( MACOS_SDK_PATH ):MACOS_SDK_PATH = $${TOOLCHAIN_MACOS_PATH}/SDKs/MacOSX10.6.sdk

################################################################################

MAKEFILE_GENERATOR	= UNIX
TARGET_PLATFORM		= macx
TEMPLATE		= app
CONFIG			*= qt warn_on release app_bundle incremental global_init_link_order lib_version_first plugin_no_soname link_prl
QT			*= core gui
QMAKE_INCREMENTAL_STYLE = sublib

exists( $${QT_MACOS_PATH}/mkspecs/common/mac-g++.conf ) {
    include($${QT_MACOS_PATH}/mkspecs/common/mac-g++.conf)
} else {
    include($${QT_MACOS_PATH}/mkspecs/common/mac.conf)
    include($${QT_MACOS_PATH}/mkspecs/common/gcc-base-macx.conf)
    include($${QT_MACOS_PATH}/mkspecs/common/g++-macx.conf)
}

# they do not use TOOLCHAIN_MACOS_BIN_PREFIX because they are not the true compilers, but the driverdriver.c tool handling -arch (universal build)
QMAKE_CC		= $${TOOLCHAIN_MACOS_BIN}/gcc-4.2
QMAKE_LINK_C       = $$QMAKE_CC
QMAKE_LINK_C_SHLIB = $$QMAKE_CC
QMAKE_CXX		= $${TOOLCHAIN_MACOS_BIN}/g++-4.2
QMAKE_LINK       = $$QMAKE_CXX
QMAKE_LINK_SHLIB = $$QMAKE_CXX

#QMAKE_LIB		= $${TOOLCHAIN_MACOS_BIN_PREFIX}ar -ru
QMAKE_LIB		= $${TOOLCHAIN_MACOS_BIN_PREFIX}ar cq
QMAKE_AR        = $${QMAKE_LIB}
QMAKE_RANLIB	= $${TOOLCHAIN_MACOS_BIN_PREFIX}ranlib -s
QMAKE_STRIP		= $${TOOLCHAIN_MACOS_BIN_PREFIX}strip

QMAKE_INCDIR		= $${MACOS_SDK_PATH}/usr/include $${TOOLCHAIN_MACOS_INCLUDE} 
QMAKE_INCDIR_QT		= $${QT_MACOS_PATH}/include
QMAKE_LIBDIR_QT		= $${QT_MACOS_PATH}/lib

QMAKE_FIX_RPATH =   $${TOOLCHAIN_MACOS_BIN_PREFIX}install_name_tool -id
QMAKE_RPATHDIR  *=  $${QMAKE_LIBDIR_QT}

QMAKE_MOC		= $$[QT_INSTALL_BINS]$${DIR_SEPARATOR}moc$${QT_HOST_BIN_SUFFIX}
QMAKE_UIC		= $$[QT_INSTALL_BINS]$${DIR_SEPARATOR}uic$${QT_HOST_BIN_SUFFIX}
QMAKE_IDC		= $$[QT_INSTALL_BINS]$${DIR_SEPARATOR}idc$${QT_HOST_BIN_SUFFIX}
QMAKE_RCC		= $$[QT_INSTALL_BINS]$${DIR_SEPARATOR}rcc

# overwrite the qconfig.pri location so load(qt_config) read files from qt mac and not qt host
QMAKE_QT_CONFIG =   $${QT_MACOS_PATH}/mkspecs/qconfig.pri
load(qt_config)